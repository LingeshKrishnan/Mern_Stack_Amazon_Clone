{"ast":null,"code":"export const initialState = {\n  cart: []\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      return { ...state,\n        cart: [...state.cart, action.item]\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      const index = state.cart.findIndex(cartItem => cartItem.id === action.id);\n      let newCart = [...state.cart];\n\n      if (index >= 0) {\n        newCart.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (id: ${action.id} as it's not in basket`);\n      }\n\n      return { ...state,\n        cart: newCart\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["F:/MERN_Stack/CLient/src/Components/reducer.js"],"names":["initialState","cart","reducer","state","action","type","item","index","findIndex","cartItem","id","newCart","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,IAAI,EAAE;AADkB,CAArB;;AAIP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAE/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,aAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACE,IAAvB;AAFH,OAAP;;AAIJ,SAAK,oBAAL;AACG,YAAMC,KAAK,GAAGJ,KAAK,CAACF,IAAN,CAAWO,SAAX,CACTC,QAAD,IAAcA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACM,EAD3B,CAAd;AAGA,UAAIC,OAAO,GAAG,CAAC,GAAGR,KAAK,CAACF,IAAV,CAAd;;AAEA,UAAGM,KAAK,IAAI,CAAZ,EAAe;AACXI,QAAAA,OAAO,CAACC,MAAR,CAAeL,KAAf,EAAsB,CAAtB;AACH,OAFD,MAGK;AACDM,QAAAA,OAAO,CAACC,IAAR,CAAc,4BAA2BV,MAAM,CAACM,EAAG,wBAAnD;AACH;;AACD,aAAO,EACH,GAAGP,KADA;AAEHF,QAAAA,IAAI,EAAEU;AAFH,OAAP;;AAIH;AACI,aAAOR,KAAP;AAvBR;AAyBH,CA3BD;;AA6BA,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    cart: [],\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    \r\n    switch(action.type) {\r\n        case 'ADD_TO_CART':\r\n            return {\r\n                ...state,\r\n                cart: [...state.cart, action.item],\r\n            };\r\n        case 'REMOVE_FROM_BASKET':\r\n           const index = state.cart.findIndex(\r\n               (cartItem) => cartItem.id === action.id\r\n           );\r\n           let newCart = [...state.cart];\r\n\r\n           if(index >= 0) {\r\n               newCart.splice(index, 1);\r\n           }\r\n           else {\r\n               console.warn(`Cant remove product (id: ${action.id} as it's not in basket`);\r\n           }\r\n           return {\r\n               ...state,\r\n               cart: newCart\r\n           }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"]},"metadata":{},"sourceType":"module"}